// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SISOC.Data.Data;

#nullable disable

namespace SISOC.Data.Migrations
{
    [DbContext(typeof(SisocDbContext))]
    [Migration("20220830230212_Inicio modelagem")]
    partial class Iniciomodelagem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SISOC.Business.Models.Anexo", b =>
                {
                    b.Property<int>("AnexoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnexoID"), 1L, 1);

                    b.Property<string>("ArquivoURL")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("InteracaoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OcorrenciaID")
                        .HasColumnType("int");

                    b.Property<string>("TipoAnexo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("AnexoID");

                    b.HasIndex("InteracaoID");

                    b.HasIndex("OcorrenciaID");

                    b.ToTable("Anexo");
                });

            modelBuilder.Entity("SISOC.Business.Models.Interacao", b =>
                {
                    b.Property<int>("InteracaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InteracaoID"), 1L, 1);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OcorrenciaID")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("InteracaoID");

                    b.HasIndex("OcorrenciaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Interacao");
                });

            modelBuilder.Entity("SISOC.Business.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuloID"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NavegarURL")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("PossuiMenu")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ModuloID");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("SISOC.Business.Models.Ocorrencia", b =>
                {
                    b.Property<int>("OcorrenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcorrenciaID"), 1L, 1);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Resolucao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SetorID")
                        .HasColumnType("int");

                    b.Property<string>("SituacaoENUM")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoOcorrenciaID")
                        .HasColumnType("int");

                    b.Property<string>("UrgenciaENUM")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioAtribuidoID")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioCadastroID")
                        .HasColumnType("int");

                    b.HasKey("OcorrenciaID");

                    b.HasIndex("SetorID");

                    b.HasIndex("TipoOcorrenciaID");

                    b.HasIndex("UsuarioAtribuidoID");

                    b.HasIndex("UsuarioCadastroID");

                    b.ToTable("Ocorrencia");
                });

            modelBuilder.Entity("SISOC.Business.Models.Permissao", b =>
                {
                    b.Property<int>("PermissaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissaoID"), 1L, 1);

                    b.Property<bool>("Cadastrar")
                        .HasColumnType("bit");

                    b.Property<bool>("Consultar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Editar")
                        .HasColumnType("bit");

                    b.Property<bool>("Excluir")
                        .HasColumnType("bit");

                    b.Property<int>("ModuloID")
                        .HasColumnType("int");

                    b.Property<int>("TipoUsuarioID")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("PermissaoID");

                    b.HasIndex("ModuloID");

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("Permissao");
                });

            modelBuilder.Entity("SISOC.Business.Models.Setor", b =>
                {
                    b.Property<int>("SetorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetorID"), 1L, 1);

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("SetorID");

                    b.ToTable("Setor");
                });

            modelBuilder.Entity("SISOC.Business.Models.TipoOcorrencia", b =>
                {
                    b.Property<int>("TipoOcorrenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoOcorrenciaID"), 1L, 1);

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoOcorrenciaID");

                    b.ToTable("TipoOcorrencia");
                });

            modelBuilder.Entity("SISOC.Business.Models.TipoUsuario", b =>
                {
                    b.Property<int>("TipoUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoUsuarioID"), 1L, 1);

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoUsuarioID");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("SISOC.Business.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"), 1L, 1);

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SetorID")
                        .HasColumnType("int");

                    b.Property<int>("TipoUsuarioID")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("SetorID");

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SISOC.Business.Models.Anexo", b =>
                {
                    b.HasOne("SISOC.Business.Models.Interacao", "InteracaoNavigation")
                        .WithMany("Anexos")
                        .HasForeignKey("InteracaoID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.Ocorrencia", "OcorrenciaNavigation")
                        .WithMany("Anexos")
                        .HasForeignKey("OcorrenciaID")
                        .IsRequired();

                    b.Navigation("InteracaoNavigation");

                    b.Navigation("OcorrenciaNavigation");
                });

            modelBuilder.Entity("SISOC.Business.Models.Interacao", b =>
                {
                    b.HasOne("SISOC.Business.Models.Ocorrencia", "OcorrenciaNavigation")
                        .WithMany("Interacaos")
                        .HasForeignKey("OcorrenciaID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.Usuario", "UsuarioNavigation")
                        .WithMany("Interacaos")
                        .HasForeignKey("UsuarioID")
                        .IsRequired();

                    b.Navigation("OcorrenciaNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("SISOC.Business.Models.Ocorrencia", b =>
                {
                    b.HasOne("SISOC.Business.Models.Setor", "SetorNavigation")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("SetorID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.TipoOcorrencia", "TipoOcorrenciaNavigation")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("TipoOcorrenciaID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.Usuario", "UsuarioAtribuidoNavigation")
                        .WithMany("OcorrenciasAtribuido")
                        .HasForeignKey("UsuarioAtribuidoID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.Usuario", "UsuarioCadastroNavigation")
                        .WithMany("OcorrenciasCadastro")
                        .HasForeignKey("UsuarioCadastroID")
                        .IsRequired();

                    b.Navigation("SetorNavigation");

                    b.Navigation("TipoOcorrenciaNavigation");

                    b.Navigation("UsuarioAtribuidoNavigation");

                    b.Navigation("UsuarioCadastroNavigation");
                });

            modelBuilder.Entity("SISOC.Business.Models.Permissao", b =>
                {
                    b.HasOne("SISOC.Business.Models.Modulo", "ModuloNavigation")
                        .WithMany("Permissaos")
                        .HasForeignKey("ModuloID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.TipoUsuario", "TipoUsuarioNavigation")
                        .WithMany("Permissaos")
                        .HasForeignKey("TipoUsuarioID")
                        .IsRequired();

                    b.Navigation("ModuloNavigation");

                    b.Navigation("TipoUsuarioNavigation");
                });

            modelBuilder.Entity("SISOC.Business.Models.Usuario", b =>
                {
                    b.HasOne("SISOC.Business.Models.Setor", "SetorNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("SetorID")
                        .IsRequired();

                    b.HasOne("SISOC.Business.Models.TipoUsuario", "TipoUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioID")
                        .IsRequired();

                    b.Navigation("SetorNavigation");

                    b.Navigation("TipoUsuarioNavigation");
                });

            modelBuilder.Entity("SISOC.Business.Models.Interacao", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("SISOC.Business.Models.Modulo", b =>
                {
                    b.Navigation("Permissaos");
                });

            modelBuilder.Entity("SISOC.Business.Models.Ocorrencia", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Interacaos");
                });

            modelBuilder.Entity("SISOC.Business.Models.Setor", b =>
                {
                    b.Navigation("Ocorrencias");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SISOC.Business.Models.TipoOcorrencia", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("SISOC.Business.Models.TipoUsuario", b =>
                {
                    b.Navigation("Permissaos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SISOC.Business.Models.Usuario", b =>
                {
                    b.Navigation("Interacaos");

                    b.Navigation("OcorrenciasAtribuido");

                    b.Navigation("OcorrenciasCadastro");
                });
#pragma warning restore 612, 618
        }
    }
}
